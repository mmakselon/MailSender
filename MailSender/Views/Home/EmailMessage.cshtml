@model MailSender.Models.ViewModels.EditEmailMessageViewModel

@{
    ViewBag.Title ="E-mail";
}

<h1 class="mb-3">Wiadomość e-mail</h1>

@if (Model.EmailMessage.Id != 0)
{
    <button class="btn btn-primary mb-3"
            onclick='window.localtion.href="@Url.Action("SendEmail","Home", new { emailMessage = Model.EmailMessage.Id})"'>
        Wyślij
    </button>
    <button class="btn btn-secondary mb-3"
            onclick="generatePdf()">
        Generuj PDF
    </button>
}

<div class="row">
    <div class="col-lg-6">
        @using (Html.BeginForm("EmailMessage", "Home"))
        {
            @Html.AntiForgeryToken()

            if (Model.EmailMessage.Id == 0)
            {
                <p class="alert alert-info mt-4 mb-4">
                    Pola tytuł, treść, nadawca i odbiorca są
                    <strong>wymagane</strong>.
                </p>
            }

            @Html.HiddenFor(x => x.EmailMessage.Id)
            @Html.HiddenFor(x => x.EmailMessage.UserId)

            <div class="form-group">
                @Html.LabelFor(x => x.EmailMessage.Subject)
                @Html.TextBoxFor(x => x.EmailMessage.Subject,
                    new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(x => x.EmailMessage.Subject)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.EmailMessage.Body)
                @Html.TextAreaFor(x => x.EmailMessage.Body,
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EmailMessage.Body)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.EmailMessage.EmailFrom)
                @Html.TextAreaFor(x => x.EmailMessage.EmailFrom,
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EmailMessage.EmailFrom)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.EmailMessage.EmailTo)
                @Html.TextAreaFor(x => x.EmailMessage.EmailTo,
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EmailMessage.EmailTo)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.EmailMessage.StatusId)
                @Html.DropDownListFor(x => x.EmailMessage.StatusId,
                new SelectList(Model.Statuses, "Id", "Name"),
                "-- Wybierz status --",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EmailMessage.StatusId)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.EmailMessage.SentDate)
                @Html.TextBoxFor(x => x.EmailMessage.SentDate,
                "{0:dd-MM-yyyy}",
                    new
                    {
                        @class = "form-control",
                        @id = "PaymentDate",
                        autocomplete = "off"
                    })
                @Html.ValidationMessageFor(x => x.EmailMessage.SentDate)
            </div>


            <button type="submit" class="btn btn-primary btn-lg mb-5">
                Zapisz
            </button>
        }
    </div>
</div>


@section Scripts
{
    <script type="text/javascript">
        function generatePdf() {

        }
    </script>
}

